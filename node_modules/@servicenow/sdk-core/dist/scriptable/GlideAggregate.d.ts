import { GlideRecord } from './GlideRecord';
/**
 * The scoped GlideAggregate class is an extension of GlideRecord and allows database aggregation (COUNT, SUM, MIN, MAX,
 * AVG) queries to be done. This can be helpful in creating customized reports or i...
 */
export declare class GlideAggregate extends GlideRecord {
    /**
     * Adds an aggregate
     */
    addAggregate(agg: string, name: string): void;
    addBizCalendarTrend(fieldName: string, bizCalendarSysId: string): void;
    addBizCalendarTrendBase(fieldName: string, bizCalendarSysId: string): void;
    addBizCalendarTrendIntersect(anotherCalendarSysId: string, overlapMode: string): void;
    /**
     * Adds a query to the aggregate. Adds an encoded query to the other queries that may have been set for this aggregate
     */
    addEncodedQuery(query: string): void;
    addHaving(arg1: string, arg2: string, arg3: string, arg4: string): void;
    addTrend(fieldName: string, timeInterval: string, numUnits: number): void;
    constructor(tableName: string);
    /**
     * Gets the value of the specified aggregate
     */
    getAggregate(agg: string, name: string): string;
    /**
     * Gets the query necessary to return the current aggregate
     */
    getAggregateEncodedQuery(): string;
    getCount(): number;
    getQuery(): string;
    getTotal(agg: string, name: string): number;
    /**
     * Gets the value of a field
     */
    getValue(name: string): string;
    /**
     * Provides the name of a field to use in grouping the aggregates. May be called numerous times to set multiple
     * group fields
     */
    groupBy(name: string): void;
    isBizCalendarTrendFillGap(): boolean;
    /**
     * Orders the aggregates using the value of the specified field. The field will also be added to the group-by list
     */
    orderBy(name: string): void;
    /**
     * Sorts the aggregates based on the specified aggregate and field
     */
    orderByAggregate(agg: string, name: string): void;
    /**
     * Sorts the aggregates into descending order based on the specified field
     */
    orderByDesc(name: string): void;
    setAggregateWindow(firstRowWanted: number, lastRowWanted: number): void;
    setBizCalendarTrendFillGap(b: boolean): void;
    /**
     * Sets whether the results are to be grouped
     */
    setGroup(b: boolean): void;
    setGroupByFollowRef(b: boolean): void;
    setOrder(b: boolean): void;
    setOrderByFollowRef(b: boolean): void;
}
