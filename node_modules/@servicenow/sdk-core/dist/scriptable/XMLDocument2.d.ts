import { XMLNode } from './XMLNode';
/**
 * XMLDocument2 is a JavaScript Object wrapper for parsing and extracting XML
 * data from an XML string. Use this JavaScript class to instantiate an object
 * from an XML string, usually a return value fro...
 */
export declare class XMLDocument2 {
    constructor();
    /**
     * Creates and adds an element node to the current node.
     * The element name is the string passed in as a parameter.
     * The new element node has no text child nodes
     */
    createElement(name: string): XMLNode;
    /**
     * Creates an element node with a text child node and adds it to the current node
     */
    createElementWithTextValue(name: string, value: string): XMLNode;
    /**
     * Gets the document element node of the XMLDocument2. The document element node is the root node
     */
    getDocumentElement(): XMLNode;
    /**
     * Gets the first node in the specified xpath
     */
    getFirstNode(xpath: string): XMLNode;
    /**
     * Gets the node after the specified node
     */
    getNextNode(prev: any): XMLNode;
    /**
     * Gets the node specified in the xpath
     */
    getNode(xpath: string): XMLNode;
    /**
     * Gets all the text child nodes from the node referenced in the xpath
     */
    getNodeText(xpath: string): string;
    /**
     * Checks if the XMLDocument is valid
     */
    isValid(): boolean;
    /**
     * Parses the XML string and loads it into the XMLDocument2 object
     */
    parseXML(xmlDoc: string): boolean;
    /**
     * Makes the node passed in as a parameter the current node
     */
    setCurrentElement(element: any): void;
    setNamespaceAware(nsAware: boolean): void;
    /**
     * Returns a string containing the XML
     */
    toString(): string;
}
