import { GlideDateTime } from './GlideDateTime';
/**
 * The scoped GlideTime class provides methods for performing operations on GlideTime objects, such as instantiating GlideTime objects or working with GlideTime fields
 */
export declare class GlideTime extends GlideDateTime {
    constructor();
    constructor(template: GlideTime);
    constructor(ms: number);
    /**
     * Gets the time in the given time format
     */
    getByFormat(format: string): string;
    /**
     * Gets the time in the current user's display format and time zone
     */
    getDisplayValue(): string;
    /**
     * Returns hour part of local time 0-11
     */
    getHourLocalTime(): number;
    /**
     * Returns hour-of-the-day part of local time 0-23
     */
    getHourOfDayLocalTime(): number;
    /**
     * Returns the hour-of-the-day part of UTC time 0-23
     */
    getHourOfDayUTC(): number;
    /**
     * Returns hour part of UTC time 0-11
     */
    getHourUTC(): number;
    /**
     * Returns a GlideTime object that represents the time portion of the GlideDateTime object in the user's time zone
     */
    getLocalTime(): GlideTime;
    getLocalTime(target: GlideDateTime): GlideTime;
    /**
     * Returns minutes part of local time
     */
    getMinutesLocalTime(): number;
    /**
     * Returns minutes part of UTC time
     */
    getMinutesUTC(): number;
    /**
     * Returns seconds part of time
     */
    getSeconds(): number;
    /**
     * Gets the time value stored in the database by the GlideTime object in the internal format, HH:mm:ss, and the system time zone, UTC by default
     */
    getValue(): string;
    getXMLValue(): string;
    /**
     * Sets a time value using the current user's display format and time zone
     */
    setDisplayValue(time: string): void;
    setDisplayValue(value: string, format: string): void;
    /**
     * Sets the time of the GlideTime object in the internal time zone, which is UTC by default or the value of the glide.sys.internal.tz property, if set
     */
    setValue(o: any): void;
    /**
     * Sets the date and time
     */
    setValue(number: number): void;
    setXMLValue(xml: string): void;
}
