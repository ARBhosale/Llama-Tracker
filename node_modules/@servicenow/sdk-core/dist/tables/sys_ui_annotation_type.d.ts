import { Record } from '../db';
export type sys_ui_annotation_type = typeof sys_ui_annotation_type;
export declare const sys_ui_annotation_type: {
    readonly name: "sys_ui_annotation_type";
    readonly schema: {
        readonly active: import("../db").Typed<boolean, {
            readonly default: true;
        }> & {
            readonly asRecord: () => never;
        };
        readonly name: import("../db").Typed<string, {
            readonly mandatory: true;
        }> & {
            readonly asRecord: () => never;
        };
        readonly omit_spacer: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly style: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
    };
} & {
    readonly asRecord: () => never;
};
export declare namespace AnnotationType {
    const Info_Box_Blue: {
        readonly data: {
            readonly name: "Info Box Blue";
        };
        readonly id: 1;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Info Box Blue";
            };
            readonly id: 1;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
    const Info_Box_Red: {
        readonly data: {
            readonly name: "Info Box Red";
        };
        readonly id: 2;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Info Box Red";
            };
            readonly id: 2;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
    const Line_Separator: {
        readonly data: {
            readonly name: "Line Separator";
            readonly style: "border-top: 2px solid black;";
            readonly omit_spacer: true;
        };
        readonly id: 3;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Line Separator";
                readonly style: "border-top: 2px solid black;";
                readonly omit_spacer: true;
            };
            readonly id: 3;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
    const Plain_Text: {
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
        readonly id: 4;
        readonly data: {
            readonly name: "Plain Text";
            readonly style: "padding-left: 14%";
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
            readonly id: 4;
            readonly data: {
                readonly name: "Plain Text";
                readonly style: "padding-left: 14%";
            };
        }, Record>;
    };
    const Section_Details: {
        readonly id: 5;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
        readonly data: {
            readonly name: "Section Details";
            readonly style: "padding: 10px;";
            readonly omit_spacer: true;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly id: 5;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
            readonly data: {
                readonly name: "Section Details";
                readonly style: "padding: 10px;";
                readonly omit_spacer: true;
            };
        }, Record>;
    };
    const Section_Plain_Text: {
        readonly data: {
            readonly name: "Section Plain Text";
        };
        readonly id: 6;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Section Plain Text";
            };
            readonly id: 6;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
    const Section_Separator: {
        readonly data: {
            readonly name: "Section Separator";
        };
        readonly id: 7;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Section Separator";
            };
            readonly id: 7;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
    const Text: {
        readonly data: {
            readonly name: "Text";
        };
        readonly id: 8;
        readonly table: {
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        };
    } & {
        readonly asRecord: () => import("../entity").Entity<{
            readonly data: {
                readonly name: "Text";
            };
            readonly id: 8;
            readonly table: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }, Record>;
    };
}
export type AnnotationType = typeof AnnotationType.Info_Box_Blue | typeof AnnotationType.Info_Box_Red | typeof AnnotationType.Line_Separator | typeof AnnotationType.Plain_Text | typeof AnnotationType.Section_Details | typeof AnnotationType.Section_Plain_Text | typeof AnnotationType.Section_Separator | typeof AnnotationType.Text;
