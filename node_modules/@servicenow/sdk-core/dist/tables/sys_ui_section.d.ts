import { Table } from '../db';
export type sys_ui_section = typeof sys_ui_section;
export declare const sys_ui_section: {
    readonly name: "sys_ui_section";
    readonly schema: {
        readonly caption: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
        readonly header: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly title: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly table: import("../db").Typed<Table, {
            readonly mandatory: true;
        }> & {
            readonly asRecord: () => never;
        };
        readonly name: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
        readonly view: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_ui_view";
            readonly schema: {
                readonly title: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly hidden: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        }>, {
            readonly referenceTable: {
                readonly name: "sys_ui_view";
                readonly schema: {
                    readonly title: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly hidden: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }> & {
            readonly asRecord: () => never;
        };
    };
} & {
    readonly asRecord: () => never;
};
