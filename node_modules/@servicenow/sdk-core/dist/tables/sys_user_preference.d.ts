export type sys_user_preference = typeof sys_user_preference;
export declare const sys_user_preference: {
    readonly name: "sys_user_preference";
    readonly schema: {
        readonly name: import("../db").Typed<string, {
            readonly mandatory: true;
        }> & {
            readonly asRecord: () => never;
        };
        readonly type: import("../db").Typed<"string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image", {
            readonly mandatory: true;
            readonly choices: ("string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image")[];
        }> & {
            readonly asRecord: () => never;
        };
        readonly value: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
        readonly description: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
        readonly system: import("../db").Typed<boolean, {}> & {
            readonly asRecord: () => never;
        };
    };
} & {
    readonly asRecord: () => never;
};
