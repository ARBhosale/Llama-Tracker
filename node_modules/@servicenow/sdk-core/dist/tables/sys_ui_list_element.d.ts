import { Table } from '../db';
export type sys_ui_list_element = typeof sys_ui_list_element;
export declare const sys_ui_list_element: {
    readonly name: "sys_ui_list_element";
    readonly schema: {
        readonly list_id: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_ui_list";
            readonly schema: {
                readonly element: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
                readonly name: import("../db").Typed<Table, {}> & {
                    readonly asRecord: () => never;
                };
                readonly parent: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => never;
                };
                readonly relationship: import("../db").Typed<string | import("../db").Record<{
                    readonly name: "sys_relationship";
                } & {
                    readonly asRecord: () => never;
                }>, {
                    readonly referenceTable: {
                        readonly name: "sys_relationship";
                    } & {
                        readonly asRecord: () => never;
                    };
                }> & {
                    readonly asRecord: () => never;
                };
                readonly view: import("../db").Typed<string | import("../db").Record<{
                    readonly name: "sys_ui_view";
                    readonly schema: {
                        readonly title: import("../db").Typed<string, {
                            readonly mandatory: true;
                        }> & {
                            readonly asRecord: () => never;
                        };
                        readonly name: import("../db").Typed<string, {
                            readonly mandatory: true;
                        }> & {
                            readonly asRecord: () => never;
                        };
                        readonly hidden: import("../db").Typed<boolean, {
                            readonly default: false;
                        }> & {
                            readonly asRecord: () => never;
                        };
                    };
                } & {
                    readonly asRecord: () => never;
                }>, {
                    readonly referenceTable: {
                        readonly name: "sys_ui_view";
                        readonly schema: {
                            readonly title: import("../db").Typed<string, {
                                readonly mandatory: true;
                            }> & {
                                readonly asRecord: () => never;
                            };
                            readonly name: import("../db").Typed<string, {
                                readonly mandatory: true;
                            }> & {
                                readonly asRecord: () => never;
                            };
                            readonly hidden: import("../db").Typed<boolean, {
                                readonly default: false;
                            }> & {
                                readonly asRecord: () => never;
                            };
                        };
                    } & {
                        readonly asRecord: () => never;
                    };
                }> & {
                    readonly asRecord: () => never;
                };
                readonly user: import("../db").Typed<string | import("../db").Record<{
                    readonly name: "sys_user";
                } & {
                    readonly asRecord: () => never;
                }>, {
                    readonly referenceTable: {
                        readonly name: "sys_user";
                    } & {
                        readonly asRecord: () => never;
                    };
                }> & {
                    readonly asRecord: () => never;
                };
                readonly position: import("../db").Typed<number, {}> & {
                    readonly asRecord: () => never;
                };
                readonly average_value: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly max_value: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly min_value: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
                readonly sum: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => never;
                };
            };
        } & {
            readonly asRecord: () => never;
        }>, {
            readonly referenceTable: {
                readonly name: "sys_ui_list";
                readonly schema: {
                    readonly element: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                    readonly name: import("../db").Typed<Table, {}> & {
                        readonly asRecord: () => never;
                    };
                    readonly parent: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => never;
                    };
                    readonly relationship: import("../db").Typed<string | import("../db").Record<{
                        readonly name: "sys_relationship";
                    } & {
                        readonly asRecord: () => never;
                    }>, {
                        readonly referenceTable: {
                            readonly name: "sys_relationship";
                        } & {
                            readonly asRecord: () => never;
                        };
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly view: import("../db").Typed<string | import("../db").Record<{
                        readonly name: "sys_ui_view";
                        readonly schema: {
                            readonly title: import("../db").Typed<string, {
                                readonly mandatory: true;
                            }> & {
                                readonly asRecord: () => never;
                            };
                            readonly name: import("../db").Typed<string, {
                                readonly mandatory: true;
                            }> & {
                                readonly asRecord: () => never;
                            };
                            readonly hidden: import("../db").Typed<boolean, {
                                readonly default: false;
                            }> & {
                                readonly asRecord: () => never;
                            };
                        };
                    } & {
                        readonly asRecord: () => never;
                    }>, {
                        readonly referenceTable: {
                            readonly name: "sys_ui_view";
                            readonly schema: {
                                readonly title: import("../db").Typed<string, {
                                    readonly mandatory: true;
                                }> & {
                                    readonly asRecord: () => never;
                                };
                                readonly name: import("../db").Typed<string, {
                                    readonly mandatory: true;
                                }> & {
                                    readonly asRecord: () => never;
                                };
                                readonly hidden: import("../db").Typed<boolean, {
                                    readonly default: false;
                                }> & {
                                    readonly asRecord: () => never;
                                };
                            };
                        } & {
                            readonly asRecord: () => never;
                        };
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly user: import("../db").Typed<string | import("../db").Record<{
                        readonly name: "sys_user";
                    } & {
                        readonly asRecord: () => never;
                    }>, {
                        readonly referenceTable: {
                            readonly name: "sys_user";
                        } & {
                            readonly asRecord: () => never;
                        };
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly position: import("../db").Typed<number, {}> & {
                        readonly asRecord: () => never;
                    };
                    readonly average_value: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly max_value: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly min_value: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                    readonly sum: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => never;
                    };
                };
            } & {
                readonly asRecord: () => never;
            };
        }> & {
            readonly asRecord: () => never;
        };
        readonly element: import("../db").Typed<string, {}> & {
            readonly asRecord: () => never;
        };
        readonly max_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly min_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly average_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly sum: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => never;
        };
        readonly position: import("../db").Typed<number, {}> & {
            readonly asRecord: () => never;
        };
    };
} & {
    readonly asRecord: () => never;
};
