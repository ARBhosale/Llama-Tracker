import { z } from 'zod';
import { Record } from '../db';
import { Entity } from '../entity';
export declare const ApplicationSchema: z.ZodObject<{
    properties: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>, z.ZodObject<Omit<{
        name: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"integer">, z.ZodLiteral<"boolean">, z.ZodLiteral<"choicelist">, z.ZodLiteral<"color">, z.ZodLiteral<"date_format">, z.ZodLiteral<"image">, z.ZodLiteral<"password">, z.ZodLiteral<"password2">, z.ZodLiteral<"short_string">, z.ZodLiteral<"time_format">, z.ZodLiteral<"timezone">, z.ZodLiteral<"uploaded_image">]>;
        value: z.ZodDefault<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>>;
        description: z.ZodDefault<z.ZodString>;
        ignoreCache: z.ZodDefault<z.ZodBoolean>;
        isPrivate: z.ZodDefault<z.ZodBoolean>;
    }, "name">, "strip", z.ZodTypeAny, {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        ignoreCache: boolean;
        isPrivate: boolean;
    }, {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value?: string | number | boolean | undefined;
        description?: string | undefined;
        ignoreCache?: boolean | undefined;
        isPrivate?: boolean | undefined;
    }>]>>>;
    userPreferences: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>, z.ZodObject<Omit<{
        name: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"integer">, z.ZodLiteral<"boolean">, z.ZodLiteral<"choicelist">, z.ZodLiteral<"color">, z.ZodLiteral<"date_format">, z.ZodLiteral<"image">, z.ZodLiteral<"password">, z.ZodLiteral<"password2">, z.ZodLiteral<"short_string">, z.ZodLiteral<"time_format">, z.ZodLiteral<"timezone">, z.ZodLiteral<"uploaded_image">]>;
        value: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>;
        description: z.ZodDefault<z.ZodString>;
        system: z.ZodDefault<z.ZodBoolean>;
    }, "name">, "strip", z.ZodTypeAny, {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        system: boolean;
    }, {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description?: string | undefined;
        system?: boolean | undefined;
    }>]>>>;
    crossScopePrivileges: z.ZodDefault<z.ZodArray<z.ZodObject<{
        operation: z.ZodString;
        status: z.ZodString;
        target_name: z.ZodString;
        target_scope: z.ZodString;
        target_type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }, {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    properties: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        ignoreCache: boolean;
        isPrivate: boolean;
    }>;
    userPreferences: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        system: boolean;
    }>;
    crossScopePrivileges: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[];
}, {
    properties?: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value?: string | number | boolean | undefined;
        description?: string | undefined;
        ignoreCache?: boolean | undefined;
        isPrivate?: boolean | undefined;
    }> | undefined;
    userPreferences?: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description?: string | undefined;
        system?: boolean | undefined;
    }> | undefined;
    crossScopePrivileges?: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[] | undefined;
}>;
export type Application = z.output<typeof ApplicationSchema>;
export type ApplicationConfig = z.input<typeof ApplicationSchema>;
export declare function Application(config: ApplicationConfig): {
    properties: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        ignoreCache: boolean;
        isPrivate: boolean;
    }>;
    userPreferences: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "image" | "integer" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value: string | number | boolean;
        description: string;
        system: boolean;
    }>;
    crossScopePrivileges: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[];
} & {
    readonly asRecord: () => Entity<{
        readonly id: "x_my_app";
        readonly table: {
            readonly name: "sys_app";
        };
        readonly data: {};
    } & {
        readonly asRecord: () => Entity<{
            readonly id: "x_my_app";
            readonly table: {
                readonly name: "sys_app";
            };
            readonly data: {};
        }, Record>;
    }, Record>;
};
