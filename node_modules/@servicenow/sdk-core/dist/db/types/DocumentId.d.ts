import type { Column, Typed } from '../Column';
import type { Record } from '../Record';
import type { TableNameColumn } from './TableName';
type DocumentIdColumn<Type extends Record = Record, Default extends Type = Type> = Column<Type, Default> & {
    dependent?: TableNameColumn;
};
export declare function DocumentIdColumn<const Type extends Record, const Default extends Type, const P extends DocumentIdColumn<Type, Default>>(properties: P & DocumentIdColumn<Type, Default>): Typed<Type, P> & {
    readonly asRecord: () => never;
};
export {};
