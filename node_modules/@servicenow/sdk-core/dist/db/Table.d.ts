import type { Column } from './Column';
export type FullSchema<T extends Table> = (T['schema'] extends object ? T['schema'] : object) & (T['extends'] extends object ? FullSchema<T['extends']> : object);
export type Table = {
    name: string;
    schema?: Record<string, Column>;
    extends?: Table;
};
export declare function Table<const T extends Table>(table: T & Table): T & {
    readonly asRecord: () => never;
};
