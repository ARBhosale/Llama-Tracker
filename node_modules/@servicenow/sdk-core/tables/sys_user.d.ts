import { Table } from '../db';
export type sys_user = typeof sys_user;
export declare const sys_user: {
    readonly name: "sys_user";
    readonly schema: {
        readonly active: import("../db").Typed<boolean, {
            readonly label: "Active";
            readonly default: true;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly city: import("../db").Typed<string, {
            readonly label: "City";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly email: import("../db").Typed<string, {
            readonly label: "Email";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly first_name: import("../db").Typed<string, {
            readonly label: "First Name";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly last_name: import("../db").Typed<string, {
            readonly label: "Last Name";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly name: import("../db").Typed<string, {
            readonly label: "Name";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly title: import("../db").Typed<string, {
            readonly label: "Title";
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
    };
};
