import { Table } from '../db';
export type sys_ui_annotation = typeof sys_ui_annotation;
export declare const sys_ui_annotation: {
    readonly name: "sys_ui_annotation";
    readonly schema: {
        readonly is_plain_text: import("../db").Typed<boolean, {
            readonly default: true;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly text: import("../db").Typed<string, {}> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly type: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_ui_annotation_type";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly default: true;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly omit_spacer: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly style: import("../db").Typed<string, {}> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
            };
        }>, {
            readonly referenceTable: {
                readonly name: "sys_ui_annotation_type";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly omit_spacer: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly style: import("../db").Typed<string, {}> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                };
            };
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
    };
};
