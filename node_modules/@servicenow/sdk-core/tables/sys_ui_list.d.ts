import { Table } from '../db';
export type sys_ui_list = typeof sys_ui_list;
export declare const sys_ui_list: {
    readonly name: "sys_ui_list";
    readonly schema: {
        readonly element: import("../db").Typed<string, {}> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly name: import("../db").Typed<Table, {}> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly parent: import("../db").Typed<string, {}> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly relationship: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_relationship";
        }>, {
            readonly referenceTable: {
                readonly name: "sys_relationship";
            };
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly view: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_ui_view";
            readonly schema: {
                readonly title: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly name: import("../db").Typed<string, {
                    readonly mandatory: true;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly hidden: import("../db").Typed<boolean, {
                    readonly default: false;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
            };
        }>, {
            readonly referenceTable: {
                readonly name: "sys_ui_view";
                readonly schema: {
                    readonly title: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly mandatory: true;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly hidden: import("../db").Typed<boolean, {
                        readonly default: false;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                };
            };
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly user: import("../db").Typed<string | import("../db").Record<{
            readonly name: "sys_user";
            readonly schema: {
                readonly active: import("../db").Typed<boolean, {
                    readonly label: "Active";
                    readonly default: true;
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly city: import("../db").Typed<string, {
                    readonly label: "City";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly email: import("../db").Typed<string, {
                    readonly label: "Email";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly first_name: import("../db").Typed<string, {
                    readonly label: "First Name";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly last_name: import("../db").Typed<string, {
                    readonly label: "Last Name";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly name: import("../db").Typed<string, {
                    readonly label: "Name";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
                readonly title: import("../db").Typed<string, {
                    readonly label: "Title";
                }> & {
                    readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                };
            };
        }>, {
            readonly referenceTable: {
                readonly name: "sys_user";
                readonly schema: {
                    readonly active: import("../db").Typed<boolean, {
                        readonly label: "Active";
                        readonly default: true;
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly city: import("../db").Typed<string, {
                        readonly label: "City";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly email: import("../db").Typed<string, {
                        readonly label: "Email";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly first_name: import("../db").Typed<string, {
                        readonly label: "First Name";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly last_name: import("../db").Typed<string, {
                        readonly label: "Last Name";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly name: import("../db").Typed<string, {
                        readonly label: "Name";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                    readonly title: import("../db").Typed<string, {
                        readonly label: "Title";
                    }> & {
                        readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
                    };
                };
            };
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly position: import("../db").Typed<number, {}> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly average_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly max_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly min_value: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
        readonly sum: import("../db").Typed<boolean, {
            readonly default: false;
        }> & {
            readonly asRecord: () => import("../entity").Entity<import("../db").Record<Table>, Table>;
        };
    };
};
