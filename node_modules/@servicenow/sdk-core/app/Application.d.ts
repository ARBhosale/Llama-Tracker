import { z } from 'zod';
import { Record } from '../db';
import { Entity } from '../entity';
export declare const subscriptionRequirement: {
    readonly none: "None";
    readonly log: "Monitor";
    readonly enforce: "Required";
};
export declare const subscriptionCategory: {
    readonly none: "Not Applicable";
    readonly general: "General";
    readonly beta: "Beta";
};
export declare const subscriptionModel: {
    readonly none: "Not applicable";
    readonly fulfiller: "Fulfiller/Requester";
    readonly producer: "Producer";
    readonly capacity: "Capacity";
    readonly mixed: "Mixed";
    readonly app_use: "Application in use";
};
export declare const BaseApplicationSchema: z.ZodObject<{
    name: z.ZodString;
    appAdministration: z.ZodDefault<z.ZodBoolean>;
    canEditInStudio: z.ZodDefault<z.ZodBoolean>;
    jsMode: z.ZodDefault<z.ZodNativeEnum<{
        readonly traditional: "Compatibility Mode";
        readonly helsinki_es5: "ES5 Standards Mode";
        readonly es_latest: "ECMAScript 2021 (ES12)";
    }>>;
    runtimeTracking: z.ZodDefault<z.ZodNativeEnum<{
        readonly permissive: "Tracking";
        readonly enforcing: "Enforcing";
    }>>;
    restrictTableChoices: z.ZodDefault<z.ZodBoolean>;
    license: z.ZodDefault<z.ZodObject<{
        subscriptionRequirement: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "None";
            readonly log: "Monitor";
            readonly enforce: "Required";
        }>>;
        subscriptionModel: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "Not applicable";
            readonly fulfiller: "Fulfiller/Requester";
            readonly producer: "Producer";
            readonly capacity: "Capacity";
            readonly mixed: "Mixed";
            readonly app_use: "Application in use";
        }>>;
        subscription: z.ZodOptional<z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"license_details">;
            }, "strip", z.ZodTypeAny, {
                name: "license_details";
            }, {
                name: "license_details";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        }>>;
        licenseDefinition: z.ZodOptional<z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_app_license_defn">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_app_license_defn";
            }, {
                name: "sys_app_license_defn";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        }>>;
        subscriptionCategory: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "Not Applicable";
            readonly general: "General";
            readonly beta: "Beta";
        }>>;
    }, "strip", z.ZodTypeAny, {
        subscriptionRequirement: "None" | "Monitor" | "Required";
        subscriptionModel: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use";
        subscriptionCategory: "Not Applicable" | "General" | "Beta";
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
    }, {
        subscriptionRequirement?: "None" | "Monitor" | "Required" | undefined;
        subscriptionModel?: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use" | undefined;
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
        subscriptionCategory?: "Not Applicable" | "General" | "Beta" | undefined;
    }>>;
    menu: z.ZodOptional<z.ZodObject<{
        title: z.ZodString;
        active: z.ZodDefault<z.ZodBoolean>;
        roles: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_user_role">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_user_role";
            }, {
                name: "sys_user_role";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }>, z.ZodString]>, "many">>;
        category: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_app_category">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_app_category";
            }, {
                name: "sys_app_category";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
                sys_id: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                sys_id?: string | undefined;
            }, {
                name: string;
                sys_id?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        }, {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        }>, z.ZodString]>>;
        hint: z.ZodDefault<z.ZodString>;
        description: z.ZodDefault<z.ZodString>;
        name: z.ZodDefault<z.ZodString>;
        view_name: z.ZodDefault<z.ZodString>;
        order: z.ZodDefault<z.ZodNumber>;
        device_type: z.ZodDefault<z.ZodUnion<[z.ZodLiteral<"any">, z.ZodLiteral<"browser">, z.ZodLiteral<"mobile">]>>;
    }, "strip", z.ZodTypeAny, {
        active: boolean;
        name: string;
        description: string;
        hint: string;
        title: string;
        view_name: string;
        order: number;
        device_type: "any" | "browser" | "mobile";
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
    }, {
        title: string;
        active?: boolean | undefined;
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
        hint?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
        view_name?: string | undefined;
        order?: number | undefined;
        device_type?: "any" | "browser" | "mobile" | undefined;
    }>>;
    userRole: z.ZodOptional<z.ZodObject<{
        table: z.ZodObject<{
            name: z.ZodLiteral<"sys_user_role">;
        }, "strip", z.ZodTypeAny, {
            name: "sys_user_role";
        }, {
            name: "sys_user_role";
        }>;
        id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
        data: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }>>;
    description: z.ZodDefault<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    name: string;
    description: string;
    appAdministration: boolean;
    canEditInStudio: boolean;
    jsMode: "Compatibility Mode" | "ES5 Standards Mode" | "ECMAScript 2021 (ES12)";
    runtimeTracking: "Tracking" | "Enforcing";
    restrictTableChoices: boolean;
    license: {
        subscriptionRequirement: "None" | "Monitor" | "Required";
        subscriptionModel: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use";
        subscriptionCategory: "Not Applicable" | "General" | "Beta";
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
    };
    menu?: {
        active: boolean;
        name: string;
        description: string;
        hint: string;
        title: string;
        view_name: string;
        order: number;
        device_type: "any" | "browser" | "mobile";
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
    } | undefined;
    userRole?: {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    } | undefined;
}, {
    name: string;
    appAdministration?: boolean | undefined;
    canEditInStudio?: boolean | undefined;
    jsMode?: "Compatibility Mode" | "ES5 Standards Mode" | "ECMAScript 2021 (ES12)" | undefined;
    runtimeTracking?: "Tracking" | "Enforcing" | undefined;
    restrictTableChoices?: boolean | undefined;
    license?: {
        subscriptionRequirement?: "None" | "Monitor" | "Required" | undefined;
        subscriptionModel?: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use" | undefined;
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
        subscriptionCategory?: "Not Applicable" | "General" | "Beta" | undefined;
    } | undefined;
    menu?: {
        title: string;
        active?: boolean | undefined;
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
        hint?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
        view_name?: string | undefined;
        order?: number | undefined;
        device_type?: "any" | "browser" | "mobile" | undefined;
    } | undefined;
    userRole?: {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    } | undefined;
    description?: string | undefined;
}>;
export declare const ApplicationSchema: z.ZodObject<{
    name: z.ZodString;
    description: z.ZodDefault<z.ZodString>;
    menu: z.ZodOptional<z.ZodObject<{
        title: z.ZodString;
        active: z.ZodDefault<z.ZodBoolean>;
        roles: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_user_role">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_user_role";
            }, {
                name: "sys_user_role";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }>, z.ZodString]>, "many">>;
        category: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_app_category">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_app_category";
            }, {
                name: "sys_app_category";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
                sys_id: z.ZodOptional<z.ZodString>;
            }, "strip", z.ZodTypeAny, {
                name: string;
                sys_id?: string | undefined;
            }, {
                name: string;
                sys_id?: string | undefined;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        }, {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        }>, z.ZodString]>>;
        hint: z.ZodDefault<z.ZodString>;
        description: z.ZodDefault<z.ZodString>;
        name: z.ZodDefault<z.ZodString>;
        view_name: z.ZodDefault<z.ZodString>;
        order: z.ZodDefault<z.ZodNumber>;
        device_type: z.ZodDefault<z.ZodUnion<[z.ZodLiteral<"any">, z.ZodLiteral<"browser">, z.ZodLiteral<"mobile">]>>;
    }, "strip", z.ZodTypeAny, {
        active: boolean;
        name: string;
        description: string;
        hint: string;
        title: string;
        view_name: string;
        order: number;
        device_type: "any" | "browser" | "mobile";
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
    }, {
        title: string;
        active?: boolean | undefined;
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
        hint?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
        view_name?: string | undefined;
        order?: number | undefined;
        device_type?: "any" | "browser" | "mobile" | undefined;
    }>>;
    appAdministration: z.ZodDefault<z.ZodBoolean>;
    canEditInStudio: z.ZodDefault<z.ZodBoolean>;
    jsMode: z.ZodDefault<z.ZodNativeEnum<{
        readonly traditional: "Compatibility Mode";
        readonly helsinki_es5: "ES5 Standards Mode";
        readonly es_latest: "ECMAScript 2021 (ES12)";
    }>>;
    runtimeTracking: z.ZodDefault<z.ZodNativeEnum<{
        readonly permissive: "Tracking";
        readonly enforcing: "Enforcing";
    }>>;
    restrictTableChoices: z.ZodDefault<z.ZodBoolean>;
    license: z.ZodDefault<z.ZodObject<{
        subscriptionRequirement: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "None";
            readonly log: "Monitor";
            readonly enforce: "Required";
        }>>;
        subscriptionModel: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "Not applicable";
            readonly fulfiller: "Fulfiller/Requester";
            readonly producer: "Producer";
            readonly capacity: "Capacity";
            readonly mixed: "Mixed";
            readonly app_use: "Application in use";
        }>>;
        subscription: z.ZodOptional<z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"license_details">;
            }, "strip", z.ZodTypeAny, {
                name: "license_details";
            }, {
                name: "license_details";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        }>>;
        licenseDefinition: z.ZodOptional<z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_app_license_defn">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_app_license_defn";
            }, {
                name: "sys_app_license_defn";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        }>>;
        subscriptionCategory: z.ZodDefault<z.ZodNativeEnum<{
            readonly none: "Not Applicable";
            readonly general: "General";
            readonly beta: "Beta";
        }>>;
    }, "strip", z.ZodTypeAny, {
        subscriptionRequirement: "None" | "Monitor" | "Required";
        subscriptionModel: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use";
        subscriptionCategory: "Not Applicable" | "General" | "Beta";
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
    }, {
        subscriptionRequirement?: "None" | "Monitor" | "Required" | undefined;
        subscriptionModel?: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use" | undefined;
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
        subscriptionCategory?: "Not Applicable" | "General" | "Beta" | undefined;
    }>>;
    userRole: z.ZodOptional<z.ZodObject<{
        table: z.ZodObject<{
            name: z.ZodLiteral<"sys_user_role">;
        }, "strip", z.ZodTypeAny, {
            name: "sys_user_role";
        }, {
            name: "sys_user_role";
        }>;
        id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
        data: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }>>;
    properties: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>, z.ZodObject<Omit<{
        name: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"integer">, z.ZodLiteral<"boolean">, z.ZodLiteral<"choicelist">, z.ZodLiteral<"color">, z.ZodLiteral<"date_format">, z.ZodLiteral<"image">, z.ZodLiteral<"password">, z.ZodLiteral<"password2">, z.ZodLiteral<"short_string">, z.ZodLiteral<"time_format">, z.ZodLiteral<"timezone">, z.ZodLiteral<"uploaded_image">]>;
        value: z.ZodDefault<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>>;
        description: z.ZodDefault<z.ZodString>;
        ignoreCache: z.ZodDefault<z.ZodBoolean>;
        isPrivate: z.ZodDefault<z.ZodBoolean>;
        choices: z.ZodDefault<z.ZodArray<z.ZodString, "many">>;
        roles: z.ZodDefault<z.ZodRecord<z.ZodUnion<[z.ZodLiteral<"read">, z.ZodLiteral<"write">]>, z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
            table: z.ZodObject<{
                name: z.ZodLiteral<"sys_user_role">;
            }, "strip", z.ZodTypeAny, {
                name: "sys_user_role";
            }, {
                name: "sys_user_role";
            }>;
            id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
            data: z.ZodObject<{
                name: z.ZodString;
            }, "strip", z.ZodTypeAny, {
                name: string;
            }, {
                name: string;
            }>;
        }, "strip", z.ZodTypeAny, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }, {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        }>, z.ZodString]>, "many">>>>;
    }, "name">, "strip", z.ZodTypeAny, {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        choices: string[];
        roles: Partial<globalThis.Record<"read" | "write", (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined>>;
        ignoreCache: boolean;
        isPrivate: boolean;
    }, {
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value?: string | number | boolean | undefined;
        description?: string | undefined;
        choices?: string[] | undefined;
        roles?: Partial<globalThis.Record<"read" | "write", (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined>> | undefined;
        ignoreCache?: boolean | undefined;
        isPrivate?: boolean | undefined;
    }>]>>>;
    userPreferences: z.ZodDefault<z.ZodRecord<z.ZodString, z.ZodUnion<[z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>, z.ZodObject<Omit<{
        name: z.ZodString;
        type: z.ZodUnion<[z.ZodLiteral<"string">, z.ZodLiteral<"integer">, z.ZodLiteral<"boolean">, z.ZodLiteral<"choicelist">, z.ZodLiteral<"color">, z.ZodLiteral<"date_format">, z.ZodLiteral<"image">, z.ZodLiteral<"password">, z.ZodLiteral<"password2">, z.ZodLiteral<"short_string">, z.ZodLiteral<"time_format">, z.ZodLiteral<"timezone">, z.ZodLiteral<"uploaded_image">]>;
        value: z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBoolean]>;
        description: z.ZodDefault<z.ZodString>;
        system: z.ZodDefault<z.ZodBoolean>;
    }, "name">, "strip", z.ZodTypeAny, {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        system: boolean;
    }, {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description?: string | undefined;
        system?: boolean | undefined;
    }>]>>>;
    crossScopePrivileges: z.ZodDefault<z.ZodArray<z.ZodObject<{
        operation: z.ZodString;
        status: z.ZodString;
        target_name: z.ZodString;
        target_scope: z.ZodString;
        target_type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }, {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }>, "many">>;
}, "strip", z.ZodTypeAny, {
    name: string;
    description: string;
    appAdministration: boolean;
    canEditInStudio: boolean;
    jsMode: "Compatibility Mode" | "ES5 Standards Mode" | "ECMAScript 2021 (ES12)";
    runtimeTracking: "Tracking" | "Enforcing";
    restrictTableChoices: boolean;
    license: {
        subscriptionRequirement: "None" | "Monitor" | "Required";
        subscriptionModel: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use";
        subscriptionCategory: "Not Applicable" | "General" | "Beta";
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
    };
    properties: globalThis.Record<string, string | number | boolean | {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        choices: string[];
        roles: Partial<globalThis.Record<"read" | "write", (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined>>;
        ignoreCache: boolean;
        isPrivate: boolean;
    }>;
    userPreferences: globalThis.Record<string, string | number | boolean | {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        system: boolean;
    }>;
    crossScopePrivileges: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[];
    menu?: {
        active: boolean;
        name: string;
        description: string;
        hint: string;
        title: string;
        view_name: string;
        order: number;
        device_type: "any" | "browser" | "mobile";
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
    } | undefined;
    userRole?: {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    } | undefined;
}, {
    name: string;
    description?: string | undefined;
    menu?: {
        title: string;
        active?: boolean | undefined;
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
        hint?: string | undefined;
        description?: string | undefined;
        name?: string | undefined;
        view_name?: string | undefined;
        order?: number | undefined;
        device_type?: "any" | "browser" | "mobile" | undefined;
    } | undefined;
    appAdministration?: boolean | undefined;
    canEditInStudio?: boolean | undefined;
    jsMode?: "Compatibility Mode" | "ES5 Standards Mode" | "ECMAScript 2021 (ES12)" | undefined;
    runtimeTracking?: "Tracking" | "Enforcing" | undefined;
    restrictTableChoices?: boolean | undefined;
    license?: {
        subscriptionRequirement?: "None" | "Monitor" | "Required" | undefined;
        subscriptionModel?: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use" | undefined;
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
        subscriptionCategory?: "Not Applicable" | "General" | "Beta" | undefined;
    } | undefined;
    userRole?: {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    } | undefined;
    properties?: globalThis.Record<string, string | number | boolean | {
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        value?: string | number | boolean | undefined;
        description?: string | undefined;
        choices?: string[] | undefined;
        roles?: Partial<globalThis.Record<"read" | "write", (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined>> | undefined;
        ignoreCache?: boolean | undefined;
        isPrivate?: boolean | undefined;
    }> | undefined;
    userPreferences?: globalThis.Record<string, string | number | boolean | {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description?: string | undefined;
        system?: boolean | undefined;
    }> | undefined;
    crossScopePrivileges?: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[] | undefined;
}>;
export type Application = z.output<typeof ApplicationSchema>;
export type ApplicationConfig = z.input<typeof ApplicationSchema>;
export declare function Application(config: ApplicationConfig): {
    name: string;
    description: string;
    appAdministration: boolean;
    canEditInStudio: boolean;
    jsMode: "Compatibility Mode" | "ES5 Standards Mode" | "ECMAScript 2021 (ES12)";
    runtimeTracking: "Tracking" | "Enforcing";
    restrictTableChoices: boolean;
    license: {
        subscriptionRequirement: "None" | "Monitor" | "Required";
        subscriptionModel: "Not applicable" | "Fulfiller/Requester" | "Producer" | "Capacity" | "Mixed" | "Application in use";
        subscriptionCategory: "Not Applicable" | "General" | "Beta";
        subscription?: {
            data: {
                name: string;
            };
            table: {
                name: "license_details";
            };
            id: string | number;
        } | undefined;
        licenseDefinition?: {
            data: {
                name: string;
            };
            table: {
                name: "sys_app_license_defn";
            };
            id: string | number;
        } | undefined;
    };
    properties: globalThis.Record<string, string | number | boolean | {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        choices: string[];
        roles: Partial<globalThis.Record<"read" | "write", (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined>>;
        ignoreCache: boolean;
        isPrivate: boolean;
    }>;
    userPreferences: globalThis.Record<string, string | number | boolean | {
        value: string | number | boolean;
        type: "string" | "boolean" | "integer" | "image" | "choicelist" | "color" | "date_format" | "password" | "password2" | "short_string" | "time_format" | "timezone" | "uploaded_image";
        description: string;
        system: boolean;
    }>;
    crossScopePrivileges: {
        status: string;
        operation: string;
        target_name: string;
        target_scope: string;
        target_type: string;
    }[];
    menu?: {
        active: boolean;
        name: string;
        description: string;
        hint: string;
        title: string;
        view_name: string;
        order: number;
        device_type: "any" | "browser" | "mobile";
        roles?: (string | {
            data: {
                name: string;
            };
            table: {
                name: "sys_user_role";
            };
            id: string | number;
        })[] | undefined;
        category?: string | {
            data: {
                name: string;
                sys_id?: string | undefined;
            };
            table: {
                name: "sys_app_category";
            };
            id: string | number;
        } | undefined;
    } | undefined;
    userRole?: {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    } | undefined;
} & {
    readonly asRecord: () => Entity<Record<{
        readonly name: "sys_app";
    }>, import("../db").Table>;
};
