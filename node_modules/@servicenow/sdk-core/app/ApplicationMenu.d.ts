import { z } from 'zod';
import { Record } from '../db';
import { Entity } from '../entity';
export declare const ApplicationMenuSchema: z.ZodObject<{
    title: z.ZodString;
    active: z.ZodDefault<z.ZodBoolean>;
    roles: z.ZodOptional<z.ZodArray<z.ZodUnion<[z.ZodObject<{
        table: z.ZodObject<{
            name: z.ZodLiteral<"sys_user_role">;
        }, "strip", z.ZodTypeAny, {
            name: "sys_user_role";
        }, {
            name: "sys_user_role";
        }>;
        id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
        data: z.ZodObject<{
            name: z.ZodString;
        }, "strip", z.ZodTypeAny, {
            name: string;
        }, {
            name: string;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }, {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    }>, z.ZodString]>, "many">>;
    category: z.ZodOptional<z.ZodUnion<[z.ZodObject<{
        table: z.ZodObject<{
            name: z.ZodLiteral<"sys_app_category">;
        }, "strip", z.ZodTypeAny, {
            name: "sys_app_category";
        }, {
            name: "sys_app_category";
        }>;
        id: z.ZodUnion<[z.ZodString, z.ZodNumber]>;
        data: z.ZodObject<{
            name: z.ZodString;
            sys_id: z.ZodOptional<z.ZodString>;
        }, "strip", z.ZodTypeAny, {
            name: string;
            sys_id?: string | undefined;
        }, {
            name: string;
            sys_id?: string | undefined;
        }>;
    }, "strip", z.ZodTypeAny, {
        data: {
            name: string;
            sys_id?: string | undefined;
        };
        table: {
            name: "sys_app_category";
        };
        id: string | number;
    }, {
        data: {
            name: string;
            sys_id?: string | undefined;
        };
        table: {
            name: "sys_app_category";
        };
        id: string | number;
    }>, z.ZodString]>>;
    hint: z.ZodDefault<z.ZodString>;
    description: z.ZodDefault<z.ZodString>;
    name: z.ZodDefault<z.ZodString>;
    view_name: z.ZodDefault<z.ZodString>;
    order: z.ZodDefault<z.ZodNumber>;
    device_type: z.ZodDefault<z.ZodUnion<[z.ZodLiteral<"any">, z.ZodLiteral<"browser">, z.ZodLiteral<"mobile">]>>;
}, "strip", z.ZodTypeAny, {
    active: boolean;
    name: string;
    description: string;
    hint: string;
    title: string;
    view_name: string;
    order: number;
    device_type: "any" | "browser" | "mobile";
    roles?: (string | {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    })[] | undefined;
    category?: string | {
        data: {
            name: string;
            sys_id?: string | undefined;
        };
        table: {
            name: "sys_app_category";
        };
        id: string | number;
    } | undefined;
}, {
    title: string;
    active?: boolean | undefined;
    roles?: (string | {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    })[] | undefined;
    category?: string | {
        data: {
            name: string;
            sys_id?: string | undefined;
        };
        table: {
            name: "sys_app_category";
        };
        id: string | number;
    } | undefined;
    hint?: string | undefined;
    description?: string | undefined;
    name?: string | undefined;
    view_name?: string | undefined;
    order?: number | undefined;
    device_type?: "any" | "browser" | "mobile" | undefined;
}>;
export type ApplicationMenu = z.output<typeof ApplicationMenuSchema>;
export type ApplicationMenuConfig = z.input<typeof ApplicationMenuSchema>;
export declare function ApplicationMenu(config: ApplicationMenuConfig): {
    title: string;
    active?: boolean | undefined;
    roles?: (string | {
        data: {
            name: string;
        };
        table: {
            name: "sys_user_role";
        };
        id: string | number;
    })[] | undefined;
    category?: string | {
        data: {
            name: string;
            sys_id?: string | undefined;
        };
        table: {
            name: "sys_app_category";
        };
        id: string | number;
    } | undefined;
    hint?: string | undefined;
    description?: string | undefined;
    name?: string | undefined;
    view_name?: string | undefined;
    order?: number | undefined;
    device_type?: "any" | "browser" | "mobile" | undefined;
} & {
    readonly asRecord: () => Entity<Record<{
        readonly name: "sys_app_application";
    }>, import("../db").Table>;
};
