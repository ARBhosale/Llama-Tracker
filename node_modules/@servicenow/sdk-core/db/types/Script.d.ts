import { Entity } from '../../entity';
import type { Column, Typed } from '../Column';
export type ScriptModule<Signature extends Function = Function> = {
    default: Signature;
};
type ScriptColumn<Signature extends Function = Function, Type extends ScriptModule<Signature> = ScriptModule<Signature>, Default extends Type = Type> = Column<Type, Default> & {
    signature?: Signature;
};
export declare function ScriptColumn<const Signature extends Function, const Type extends ScriptModule<Signature>, const Default extends Type, const P extends ScriptColumn<Signature, Type, Default>>(properties: P & ScriptColumn<Signature, Type, Default>): Typed<Type, P> & {
    readonly asRecord: () => Entity<import("..").Record<import("..").Table>, import("..").Table>;
};
export {};
