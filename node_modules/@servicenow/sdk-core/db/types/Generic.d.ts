import { Entity } from '../../entity';
import type { ChoiceColumn, ChoiceType, Choices } from './Choice';
import type { Typed } from '../Column';
export type GenericType<TChoices extends Choices = Choices, Type extends ChoiceType<TChoices> = ChoiceType<TChoices>, Default extends Type = Type> = ChoiceColumn<TChoices, Type, Default> & {
    __type__: string;
};
export declare function GenericColumn<const Type extends string, const Default extends Type, const P extends GenericType<Choices<string>, Type, Default>>(properties: P & GenericType<Choices<string>, Type, Default>): Typed<Type, P> & {
    readonly asRecord: () => Entity<import("..").Record<import("..").Table>, import("..").Table>;
};
