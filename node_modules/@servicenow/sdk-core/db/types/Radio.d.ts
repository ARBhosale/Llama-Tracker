import { ChoiceType, Choices } from '..';
import { Entity } from '../../entity';
import { Typed, Column } from '../Column';
export type RadioColumn<TChoices extends Choices = Choices, Type extends ChoiceType<TChoices> = ChoiceType<TChoices>, Default extends Type = Type> = Column<Type, Default> & {
    choices?: TChoices;
};
export declare function RadioColumn<const TChoices extends Choices, const Type extends ChoiceType<TChoices>, const Default extends Type, const P extends RadioColumn<TChoices, Type, Default>>(properties: P & RadioColumn<TChoices, Type, Default>): Typed<Type, P> & {
    readonly asRecord: () => Entity<import("..").Record<import("..").Table>, import("..").Table>;
};
