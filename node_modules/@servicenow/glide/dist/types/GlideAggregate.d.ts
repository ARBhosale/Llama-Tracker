import { GlideRecord } from '../imports/GlideRecord';
export declare class GlideAggregate extends GlideRecord {
    addAggregate(agg?: string, name?: string): void;
    addBizCalendarTrend(fieldName?: string, bizCalendarSysId?: string): void;
    addBizCalendarTrendBase(fieldName?: string, bizCalendarSysId?: string): void;
    addBizCalendarTrendIntersect(anotherCalendarSysId?: string, overlapMode?: string): void;
    addEncodedQuery(query?: string): void;
    addHaving(arg1?: string, arg2?: string, arg3?: string, arg4?: string): void;
    addTrend(fieldName?: string, timeInterval?: string, numUnits?: number): void;
    getAggregate(agg?: string, name?: string): string;
    getAggregateEncodedQuery(): string;
    getCount(): number;
    getQuery(): string;
    getTotal(agg?: string, name?: string): number;
    getValue(name?: string): string;
    groupBy(name?: string): void;
    isBizCalendarTrendFillGap(): boolean;
    orderBy(name?: string): void;
    orderByAggregate(agg?: string, name?: string): void;
    orderByDesc(name?: string): void;
    setAggregateWindow(firstRowWanted?: number, lastRowWanted?: number): void;
    setBizCalendarTrendFillGap(b?: boolean): void;
    setGroup(b?: boolean): void;
    setGroupByFollowRef(b?: boolean): void;
    setIntervalYearIncluded(b?: boolean): void;
    setOrder(b?: boolean): void;
    setOrderByFollowRef(b?: boolean): void;
}
